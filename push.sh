#!/bin/bash

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[1;34m'
YELLOW='\033[1;33m'
NC='\033[0m'

separator() {
    echo -e "${BLUE}----------------------------------------${NC}"
}

# –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É
current_branch=$(git rev-parse --abbrev-ref HEAD)

# –ü—Ä–æ–≤–µ—Ä–∫–∞: –Ω–µ –≤ main
if [ "$current_branch" = "main" ]; then
    echo -e "${RED}üö´ –ù–µ–ª—å–∑—è —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–ø—Ä—è–º—É—é –≤ main!${NC}"
    exit 1
fi

separator
echo -e "${YELLOW}üìå –¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: $current_branch${NC}"

# –ö–æ–º–º–∏—Ç
echo -e "${YELLOW}üí¨ –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞:${NC}"
read commit_message
git add .
git commit -m "$commit_message"

# –ü—É—à
separator
echo -e "${GREEN}‚¨ÜÔ∏è –ü—É—à–∏–º –≤–µ—Ç–∫—É $current_branch...${NC}"
git push origin "$current_branch"

# Merge –≤ main
separator
echo -e "${GREEN}üîÄ –°–ª–∏–≤–∞–µ–º $current_branch ‚Üí main –ª–æ–∫–∞–ª—å–Ω–æ...${NC}"
git checkout main
git merge "$current_branch"

# –£–¥–∞–ª–µ–Ω–∏–µ –≤–µ—Ç–∫–∏
separator
echo -e "${RED}üßπ –£–¥–∞–ª—è–µ–º –≤–µ—Ç–∫—É $current_branch...${NC}"
git branch -d "$current_branch"

# –ù–æ–≤–∞—è –≤–µ—Ç–∫–∞
separator
echo -e "${YELLOW}üÜï –í–≤–µ–¥–∏—Ç–µ –∏–º—è –Ω–æ–≤–æ–π –≤–µ—Ç–∫–∏:${NC}"
read new_branch
git checkout -b "$new_branch"

separator
echo -e "${GREEN}‚úÖ –ì–æ—Ç–æ–≤–æ! –¢—ã —Ç–µ–ø–µ—Ä—å –≤ –≤–µ—Ç–∫–µ: $new_branch${NC}"
separator
